std::vector<Vertex> Graph::GetNeighbors(const Vertex &v, Direction current_direction) const
{
    std::vector<Vertex> neighbors;

    if (current_direction == Direction::Up || current_direction == Direction::Down)
    {
        int dx[] = {0, 0};
        int dy[] = {-1, 1};

        std::vector<Direction> direction_vector = {Direction::Up, Direction::Down};

        for (int i = 0; i < 2; ++i)
        {
            int nx = v.x + dx[i];
            int ny = v.y + dy[i];

            if (nx >= 0 && ny >= 0 && nx < width && ny < height)
            {
                Vertex neighbor;
                for (auto vert : locations)
                {
                    if (vert.x == nx && vert.y == ny)
                    {
                        neighbor = {vert.x, vert.y};
                        neighbor.direction = direction_vector[i];
                        break;
                    }
                }
                    neighbors.push_back(neighbor);
            }
        }

        Vertex neighbor1;
        for (Vertex vert : locations)
        {
            if (vert.x == v.x && vert.y == v.y)
            {
                neighbor1 = {vert.x, vert.y};
                neighbor1.direction = Direction::Left;
                break;
            }
        }
        neighbors.push_back(neighbor1);

        Vertex neighbor2;
        for (Vertex vert : locations)
        {
            if (vert.x == v.x && vert.y == v.y)
            {
                neighbor2 = {vert.x, vert.y};
                neighbor2.direction = Direction::Right;
                break;
            }
        }
        neighbors.push_back(neighbor2);
    }

    if (current_direction == Direction::Left || current_direction == Direction::Right)
    {
        int dx[] = {-1, 1};
        int dy[] = {0, 0};

        std::vector<Direction> direction_vector = {Direction::Left, Direction::Right};

        for (int i = 0; i < 2; ++i)
        {
            int nx = v.x + dx[i];
            int ny = v.y + dy[i];

            if (nx >= 0 && ny >= 0 && nx < width && ny < height)
            {
                Vertex neighbor;
                for (auto vert : locations)
                {
                    if (vert.x == nx && vert.y == ny)
                    {
                        neighbor = {vert.x, vert.y};
                        neighbor.direction = direction_vector[i];
                        break;
                    }
                }
                    neighbors.push_back(neighbor);
            }
        }

        Vertex neighbor1;
        for (Vertex vert : locations)
        {
            if (vert.x == v.x && vert.y == v.y)
            {
                neighbor1 = {vert.x, vert.y};
                neighbor1.direction = Direction::Up;
                break;
            }
        }
        neighbors.push_back(neighbor1);

        Vertex neighbor2;
        for (Vertex vert : locations)
        {
            if (vert.x == v.x && vert.y == v.y)
            {
                neighbor2 = {vert.x, vert.y};
                neighbor2.direction = Direction::Down;
                break;
            }
        }
        neighbors.push_back(neighbor2);
    }

    neighbors.push_back(v);

    return neighbors;
}